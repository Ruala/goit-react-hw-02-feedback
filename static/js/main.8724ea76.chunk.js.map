{"version":3,"sources":["components/Container/Container.js","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/App/App.js","index.js"],"names":["Container","children","className","Section","title","defaultProps","FeedbackOptions","options","onLeaveFeedback","buttons","map","item","text","length","toUpperCase","slice","key","type","onClick","Statistics","good","neutral","bad","total","positivePercentage","App","state","handleClick","name","setState","prevState","this","sum","Math","round","countTotalFeedback","countPositiveFeedbackPercentage","Object","keys","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8UAKeA,G,MAFG,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAkB,yBAAKC,UAAU,aAAaD,KCC1DE,G,MAAU,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAOH,EAAV,EAAUA,SAAV,OACd,6BAASC,UAAU,WACjB,wBAAIA,UAAU,kBAAkBE,GAC/BH,KAILE,EAAQE,aAAe,CACrBJ,SAAU,IAQGE,QCOAG,G,MAvBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAUF,EAAQG,KAAI,SAAAC,GAC1B,IAAMC,EAAOD,EAAKE,OAAS,EAAIF,EAAK,GAAGG,cAAgBH,EAAKI,MAAM,GAAK,GAEvE,OACE,4BACEb,UAAU,0BACVc,IAAKL,EACLM,KAAK,SACLC,QAAS,kBAAMV,EAAgBG,KAE9BC,MAIP,OAAO,6BAAMH,KCfTU,G,MAAa,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,wBAAItB,UAAU,cACZ,qCAAWkB,GACX,wCAAcC,GACd,oCAAUC,GACV,sCAAYC,GACZ,kDAAwBC,EAAxB,QAIJL,EAAWd,aAAe,CACxBe,KAAM,EACNC,QAAS,EACTC,IAAK,EACLC,MAAO,EACPC,mBAAoB,GAWPL,QCiCAM,E,4MAxDbC,MAAQ,CACNN,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPK,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GAAS,sBACpBF,EAAOE,EAAUF,GAAQ,O,mEAIR,IAAD,EACYG,KAAKL,MAEpC,OAHmB,EACXN,KADW,EACLC,QADK,EACIC,M,wDAKU,IAAD,EACDS,KAAKL,MAA5BN,EADwB,EACxBA,KACFY,EAAMZ,EAFoB,EAClBC,QADkB,EACTC,IAGvB,OAAOU,EAAM,EAAIC,KAAKC,MAAc,IAAPd,EAAcY,GAAO,I,+BAG1C,IAAD,EACwBD,KAAKL,MAA5BN,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBC,EAAQQ,KAAKI,qBACbX,EAAqBO,KAAKK,kCAEhC,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,CAAShC,MAAM,yBACb,kBAAC,EAAD,CACEG,QAAS8B,OAAOC,KAAKP,KAAKL,OAC1BlB,gBAAiBuB,KAAKJ,eAG1B,kBAAC,EAAD,CAASvB,MAAM,cACZmB,EAAQ,EACP,kBAAC,EAAD,CACEH,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,mBAAoBA,IAGtB,0B,GAjDMe,a,MCDlBC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.8724ea76.chunk.js","sourcesContent":["import React from 'react';\nimport './Container.scss';\n\nconst Container = ({ children }) => <div className=\"Container\">{children}</div>;\n\nexport default Container;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Section.scss';\n\nconst Section = ({ title, children }) => (\n  <section className=\"Section\">\n    <h3 className=\"Section__title\">{title}</h3>\n    {children}\n  </section>\n);\n\nSection.defaultProps = {\n  children: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './FeedbackOptions.scss';\n\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  const buttons = options.map(item => {\n    const text = item.length > 0 ? item[0].toUpperCase() + item.slice(1) : '';\n\n    return (\n      <button\n        className=\"FeedbackOptions__button\"\n        key={item}\n        type=\"button\"\n        onClick={() => onLeaveFeedback(item)}\n      >\n        {text}\n      </button>\n    );\n  });\n  return <div>{buttons}</div>;\n};\n\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(PropTypes.string.isRequired).isRequired,\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Statistics.scss';\n\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\n  <ul className=\"Statistics\">\n    <li>Good: {good}</li>\n    <li>Neutral: {neutral}</li>\n    <li>Bad: {bad}</li>\n    <li>Total: {total}</li>\n    <li>Positive feedback: {positivePercentage}%</li>\n  </ul>\n);\n\nStatistics.defaultProps = {\n  good: 0,\n  neutral: 0,\n  bad: 0,\n  total: 0,\n  positivePercentage: 0,\n};\n\nStatistics.propTypes = {\n  good: PropTypes.number,\n  neutral: PropTypes.number,\n  bad: PropTypes.number,\n  total: PropTypes.number,\n  positivePercentage: PropTypes.number,\n};\n\nexport default Statistics;\n","import React, { Component } from 'react';\nimport Container from '../Container';\nimport Section from '../Section';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Statistics from '../Statistics';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = name => {\n    this.setState(prevState => ({\n      [name]: prevState[name] + 1,\n    }));\n  };\n\n  countTotalFeedback() {\n    const { good, neutral, bad } = this.state;\n\n    return good + neutral + bad;\n  }\n\n  countPositiveFeedbackPercentage() {\n    const { good, neutral, bad } = this.state;\n    const sum = good + neutral + bad;\n\n    return sum > 0 ? Math.round((good * 100) / sum) : 0;\n  }\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const total = this.countTotalFeedback();\n    const positivePercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <Container>\n        <Section title=\"Please leave feedback\">\n          <FeedbackOptions\n            options={Object.keys(this.state)}\n            onLeaveFeedback={this.handleClick}\n          />\n        </Section>\n        <Section title=\"Statistics\">\n          {total > 0 ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={total}\n              positivePercentage={positivePercentage}\n            />\n          ) : (\n            'No feedback given'\n          )}\n        </Section>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}